#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================
source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading settings..." --weight=1

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get --app=$app --key=domain)
path_url=$(ynh_app_setting_get --app=$app --key=path)
superuser=$(ynh_app_setting_get --app=$app --key=superuser)
password=$(ynh_app_setting_get --app=$app --key=password)
final_path=$(ynh_app_setting_get --app=$app --key=final_path)
port=$(ynh_app_setting_get --app=$app --key=port)
stream_port=$(ynh_app_setting_get --app=$app --key=stream_port)

#=================================================
# CHECK IF THE APP CAN BE RESTORED
#=================================================
ynh_script_progression --message="Validating restoration parameters..." --weight=16

ynh_webpath_available --domain=$domain --path_url=$path_url \
    || ynh_die --message="Path not available: ${domain}${path_url}"
test ! -d $final_path \
    || ynh_die --message="There is already a directory: $final_path "

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# OPEN TVHEADEND PORTS
#=================================================
if yunohost firewall list | grep -q "\- $port$"
then
    ynh_die --message="Port $port already open (and maybe used by another application)"
fi

if yunohost firewall list | grep -q "\- $stream_port$"
then
    ynh_die --message="Port $stream_port already open (and maybe used by another application)"
fi

ynh_exec_warn_less yunohost firewall allow --no-upnp TCP $port
ynh_exec_warn_less yunohost firewall allow --no-upnp TCP $stream_port

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --weight=7

if [ -n "$(uname -m | grep arm)" ]
then
    ynh_install_app_dependencies $pkg_dependencies_rb
else
    ynh_install_app_dependencies $pkg_dependencies_x86
fi

#=================================================
# DOWNLOAD TVHEADEND DEB PACKAGE
#=================================================
ynh_script_progression --message="Downloading Tvheadend..." --weight=3

temp_folder="$(mktemp -d)"
tvheadend_deb_dst="$temp_folder/tvheadend_deb.deb"
tvheadend_deb_url=""

if [ -n "$(uname -m | grep arm)" ]
then
    tvheadend_deb_url="$tvheadend_deb_arm"
elif [ -n "$(uname -m | grep x86_64)" ]
then
    tvheadend_deb_url="$tvheadend_deb_x86_64"
else
    tvheadend_deb_url="$tvheadend_deb_x86_32"
fi

ynh_exec_quiet "wget -q -O $tvheadend_deb_dst $tvheadend_deb_url"

#=================================================
# INSTALL TVHEADEND DEB PACKAGE
#=================================================
ynh_script_progression --message="Installing Tvheadend..." --weight=13

ynh_exec_warn_less dpkg -i $tvheadend_deb_dst

ynh_secure_remove --file="$temp_folder"

# The deb install automatically create the hts system user

# Tvheadend automatically start after install
# we stop it before the configuration
ynh_systemd_action --service_name=$app --action="stop"

#=================================================
# RESTORE TVHEADEND CONFIG FILES
#=================================================
ynh_script_progression --message="Restoring Tvheadend main directory and config files..." --weight=1

ynh_restore_file --origin_path="/etc/default/tvheadend"
ynh_restore_file --origin_path="$final_path"

#=================================================
# RESTORE THE NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Restoring NGINX web server configuration..." --weight=1

ynh_restore_file --origin_path="/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# RESTORE THE LOGROTATE CONFIGURATION AND LOG FILE
#=================================================
ynh_script_progression --message="Restoring logrotate configuration and log file..." --weight=1

ynh_restore_file --origin_path="/etc/logrotate.d/$app"
ynh_restore_file --origin_path="/var/log/$app.log"

#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================
yunohost service add $app --log "/var/log/$app.log"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring SSOwat..." --weight=1

ynh_app_setting_set --app=$app --key=skipped_uris --value="/"

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# PREVENT TVHEADEND BEING UPGRADED THROUGHT APT
#=================================================
ynh_script_progression --message="Prevent Tvheadend being upgraded throught APT..." --weight=1

apt-mark hold tvheadend

#=================================================
# START TVHEADEND SERVICE
#=================================================
ynh_script_progression --message="Starting Tvheadend service..." --weight=1

ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app.log"

#=================================================
# END OF SCRIPT
#=================================================
ynh_script_progression --message="Installation of Tvheadend completed, HTTP port is $port and HTSP port is $stream_port" --last

